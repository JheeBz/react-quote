{"version":3,"sources":["GlobalStyle.ts","styled-components.ts","components/Background.tsx","components/Card.tsx","components/Button.tsx","components/ButtonList.tsx","components/Quote.tsx","utils/api.ts","components/QuoteContainer.tsx","components/App.tsx"],"names":["GlobalStyle","createGlobalStyle","_templateObject","styledComponents","styled","default","ThemeProvider","css","keyframes","div","Background_templateObject","Card","Card_templateObject","props","theme","boxShadow","CardTitle","_templateObject2","center","CardBody","_templateObject3","Button","Button_templateObject","large","primary","white","ButtonList","ButtonList_templateObject","RefreshIcon","Refresh","Quote_templateObject","TwitterIcon","Twitter","Quote_templateObject2","Quote","handleNewQuote","handleTwitterShare","isLoading","react","QuoteBody","react_pose_es","renderQuote","components_ButtonList","components_Button","type","onClick","disabled","size","quote","error","length","QuoteWarning","key","QuoteContent","QuoteAuthor","author","Quote_templateObject3","QuoteTransition","posed","p","enter","opacity","exit","_templateObject4","_templateObject5","span","_templateObject6","axios","create","baseURL","QuoteContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","event","preventDefault","getQuote","state","url","concat","window","open","bind","assertThisInitialized","setState","api","get","params","filter[orderby]","filter[posts_per_page]","_","uuidv4","response","post","data","content","replace","he","title","assign","React","success","AppStyle","App_templateObject","App","Background","QuoteContainer_QuoteContainer"],"mappings":"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","file":"static/js/1.cfa74b27.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: sans-serif;\n    font-size: 10px;\n  }\n`\n","import * as styledComponents from \"styled-components\"\n\nimport ThemeInterface from './theme'\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<ThemeInterface>\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider }\nexport default styled","import styled from '../styled-components'\n\nexport default styled.div` \n  background:\n    linear-gradient(\n      rgba(42,43,57, 0.70),\n      rgba(42,43,57, 0.70)\n    ),\n    url('https://source.unsplash.com/1920x1080/?mountain+snow+lake') no-repeat center center fixed;\n  background-size: cover;\n`","import styled from '../styled-components'\n\nexport const Card = styled.div`\n  margin: 0px 0.75rem 0px 0.75rem;\n  padding: 1.75rem;\n  display: flex;\n  flex-direction: column;\n  flex: 0 1 500px; /* flex-grow: 0, flex-shrink: 1, flex-basis: 500px */\n  box-shadow: ${props => props.theme.boxShadow};\n  background: #fefefe;\n  border-radius: 4px;\n`\n\nexport const CardTitle = styled('h2')<{ center?: boolean }>`\n  font-family: 'Raleway', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n  text-align: ${props => props.center ? 'center' : 'justify'};\n  font-size: 2rem;\n`\n\nexport const CardBody = styled.div`\n  font-size: 1rem;\n  font-family: 'Lato', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n`","import styled from '../styled-components'\nimport * as React from 'react'\n\nexport interface ButtonProps {\n  readonly large?: boolean,\n  readonly primary?: boolean\n}\n\nconst Button = styled('button')<ButtonProps>`\n  font-family: 'Lato', sans-serif;\n  box-sizing: inherit;\n  flex: ${props => props.large ? '2' : '1'};\n  border: 2px solid ${props => props.theme.primary};\n  background: ${props => props.primary ? props.theme.primary : props.theme.white};\n  color: ${props => props.primary ? props.theme.white : props.theme.primary};\n  font-size: 1.25rem;\n  margin:  0.25rem;\n  padding: 0.50rem 1.25rem;\n  border-radius: 3px;\n  cursor: pointer;\n  :hover {\n    background: ${props => props.primary ? props.theme.white : props.theme.primary};\n    color: ${props => props.primary ? props.theme.primary : props.theme.white};\n    transition: 0.2s ease-out;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: default;\n  }\n`\n\nexport default Button\n","import styled from '../styled-components'\n\nconst ButtonList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n\n  @media screen and (max-width: 400px) {\n    flex-direction: column;\n  }\n`\n\nexport default ButtonList","import * as React from 'react'\nimport styled from '../styled-components'\nimport { RefreshCcw as Refresh, Twitter } from 'styled-icons/feather'\nimport posed, { PoseGroup } from 'react-pose'\nimport { QuoteContainerState } from './QuoteContainer'\nimport Button from './Button'\nimport ButtonList from './ButtonList'\n\nexport interface QuoteProps extends QuoteContainerState {\n  handleNewQuote: (event: React.MouseEvent<Element, MouseEvent>) => void,\n  handleTwitterShare: (event: React.MouseEvent<Element, MouseEvent>) => void\n}\n\nconst RefreshIcon = styled(Refresh)`\n  stroke-width: 2;\n`\n\nconst TwitterIcon = styled(Twitter)`\n  stroke-width: 2;\n`\n\nexport default (props: QuoteProps): JSX.Element => {\n  const { handleNewQuote, handleTwitterShare, isLoading } = props\n  return (\n    <QuoteBody>\n      <React.Fragment>\n        <PoseGroup>\n        {renderQuote(props)}\n        </PoseGroup>\n      </React.Fragment>\n      <ButtonList>\n        <Button type=\"button\" onClick={handleNewQuote} disabled={isLoading} large primary>\n          <RefreshIcon size=\"24\" />\n        </Button>\n        <Button type=\"button\" onClick={handleTwitterShare} disabled={isLoading}>\n          <TwitterIcon size=\"24\" />\n        </Button>\n      </ButtonList>\n    </QuoteBody>\n  )\n}\n\nconst renderQuote = (props: QuoteProps) => {\n  if (props.quote !== '' && props.error === '' && !props.isLoading) {\n    return (\n      <QuoteContent key=\"quote-content\">\n        “{props.quote}”\n        <QuoteAuthor>\n          — {props.author}\n        </QuoteAuthor>\n      </QuoteContent>\n    )\n  } else if (props.error !== '' && props.error.length > 0) {\n    return (\n      <QuoteWarning key=\"quote-warning\">\n        {props.error}\n      </QuoteWarning>\n    )\n  }\n  return (\n    <QuoteWarning key=\"quote-loading\">\n      Loading...\n    </QuoteWarning>\n  )\n}\n\nconst QuoteBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  flex-grow: 1;\n`\n\nconst QuoteTransition = posed.p({\n  enter: { opacity: 1 },\n  exit: { opacity: 0 }\n})\n\nconst QuoteWarning = styled(QuoteTransition)`\n  text-align: center;\n  font-size: 1.25rem;\n`\n\nconst QuoteContent = styled(QuoteTransition)`\n  flex-direction: column;\n  justify-content: stretch;\n  flex: 1 1 auto;\n  display: flex;\n`\n\nexport const QuoteAuthor = styled.span`\n  text-align: right;\n  font-size: .75rem;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  color: #868e96;\n`","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: 'https://quotesondesign.com/wp-json'\n})","import * as React from 'react'\nimport Quote from './Quote'\nimport api from '../utils/api'\nimport * as he from 'he'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport interface QuoteContainerState {\n  readonly quote: string,\n  readonly author: string,\n  readonly isLoading: boolean,\n  readonly error: string\n}\n\nexport default class QuoteContainer extends React.PureComponent<{}, QuoteContainerState> {\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      quote: '',\n      author: '',\n      isLoading: false,\n      error: ''\n    }\n    this.handleNewQuote = this.handleNewQuote.bind(this)\n    this.handleTwitterShare = this.handleTwitterShare.bind(this)\n  }\n\n  handleNewQuote = (event: React.MouseEvent) => {\n    event.preventDefault()\n    this.getQuote()\n  }\n\n  handleTwitterShare = (event: React.MouseEvent) => {\n    event.preventDefault()\n    if (this.state.quote.length > 0) {\n      const url = `https://twitter.com/intent/tweet?text=${this.state.quote} —${this.state.author}`\n      window.open(url, '_blank')\n    }\n  }\n\n  componentDidMount() {\n    this.getQuote()\n  }\n\n  async getQuote() {\n    this.setState({\n      isLoading: true\n    })\n    try {\n      const response = await api.get('posts', {\n        params: {\n          'filter[orderby]': 'rand',\n          'filter[posts_per_page]': 1,\n          _: uuidv4()\n        }\n      })\n      const post = response.data[0]\n      let quote = post.content.replace(/(<([^>]+)>)/ig, \"\")\n      quote = quote.replace(/\\s+$/, \"\")\n      quote = he.decode(quote)\n      const author = he.decode(post.title)\n      this.setState({\n        quote,\n        author,\n        isLoading: false,\n        error: ''\n      })\n    } catch (error) {\n      this.setState({\n        error: 'Hmmm, there was an error getting your quote. 🤔 Try again?',\n        isLoading: false\n      })\n    }\n  }\n\n  render () {\n    return (\n      <Quote\n        {...this.state}\n        handleNewQuote={this.handleNewQuote}\n        handleTwitterShare={this.handleTwitterShare}\n      />\n    )\n  }\n}","import { GlobalStyle } from '../GlobalStyle'\nimport * as React from 'react'\nimport styled, { ThemeProvider } from '../styled-components'\nimport '../assets/fonts.css'\nimport Background from './Background'\nimport { Card, CardBody, CardTitle } from './Card'\nimport QuoteContainer from './QuoteContainer'\n\nexport const theme = {\n  success: '#28a745',\n  primary: '#007bff',\n  white: '#fefefe',\n  boxShadow: '0px 0px 43px -10px black'\n}\n\nconst AppStyle = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`\n\nclass App extends React.Component {\n  render () {\n    return (\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <GlobalStyle />\n          <Background>\n            <AppStyle>\n              <Card>\n                <CardBody>\n                  <CardTitle center>\n                    Quote of the Day\n                  </CardTitle>\n                  <QuoteContainer />\n                </CardBody>\n              </Card>\n            </AppStyle>\n          </Background>\n        </React.Fragment>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default App\n"],"sourceRoot":""}